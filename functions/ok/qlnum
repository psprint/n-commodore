#!/usr/bin/env zsh
# Copyright (c) 2023 Sebastian Gniazdowski
#
# ok/qlnum
#

ok/qlnum() {

    0=${${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}:A}

    integer EC;[[ -f $0 ]];EC+=$?

    # Options and arguments
    local -A Opts; local -a opts tmoutop
    int/nc::parse-opts "U u: s -sys v: -var: t:=tmoutop -timeout:=tmoutop" Opts opts "$@"||\
        {iqerr incorrect options given to {func}$0:t{%} fun; return EC+17;}
    set -- "$reply[@]"
    int/nc::opt-cascade Opts -s --sys -t --timeout -v --var
    EC+=$?
    int/nc::reset
    integer QU
    local QF=$1
    (($+Opts[-u]))&&QU=$Opts[-u]||builtin exec {QU}<$QF
    EC+=$?
    if (($+Opts[-s]));then
        int/nc::read-all-sys -u$QU $tmoutop
    else
        int/nc::read-all -u$QU $tmoutop
    fi
    EC+=$?
    (($+Opts[-U]))&&REPLY=${#${(u)reply}}||REPLY=$#reply
    (($+Opts[-u]&&QU))||builtin exec {QU}<&-
    return EC
}
ok/qlnum "$@"
# vim:ft=zsh
